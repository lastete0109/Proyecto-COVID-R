`$`('NOMBDIST') %>% unique() %>% sort()
stillSelected<-isolate(input$Distrito[input$Distrito %in% distritos])
updateSelectizeInput(session,"Distrito",choices=distritos,
selected=stillSelected,server=T)
})
}
shinyApp(ui = ui, server = server)
# Codigo de servidor
server <- function(input, output,session){
output$mapa <- renderLeaflet({
leaflet() %>%
addTiles(attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>') %>%
setView( lng = -75.648748 , lat= -9.802423 ,zoom=5)
})
observe({
req(input$Analisis)
analisis = input$Analisis
if(analisis=='Departamental'){
req(input$Departamento)
depart_selecc = input$Departamento
data_selecc = data_depart[data_depart$NOMBDEP %in% depart_selecc,]
metricas = fx_metricas("Dep",depart_selecc)
data_selecc@data =  data_selecc@data %>% left_join(metricas,by= c("NOMBDEP"="DEPARTAMENTO"))
labels = sprintf(
"<strong>%s</strong><br/>
Infectados totales: %d<br/>
Mujeres: %d<br/>
Hombres: %d<br/>
Pico de infectados: %s<br/>
Infectados ayer: %d <br/>
Fallecidos totales: %d <br/>",
metricas$DEPARTAMENTO,
metricas$TOTAL,
metricas$FEMENINO,
metricas$MASCULINO,
metricas$PICO,
metricas$INFECTADOS_AYER,
metricas$TOTAL_F) %>% lapply(htmltools::HTML)
leafletProxy("mapa") %>%
clearShapes() %>%
addPolygons(stroke = TRUE,
color='black',
weight = 1,
data=data_selecc,
label = labels,
highlight = highlightOptions(bringToFront = TRUE,
color="red",
weight=3),
labelOptions = labelOptions(
style = list("font-weight"="normal",
padding = "3px 8px"),
textsize = "12px",
direction = "auto"))
}
if(analisis=='Distrital'){
req(input$Distrito)
dist_selecc = input$Distrito
data_selecc = data_distrital[data_distrital$NOMBDIST %in% dist_selecc,]
metricas = fx_metricas("Dist",dist_selecc)
data_selecc@data =  data_selecc@data %>%
left_join(metricas,by= c("NOMBDIST"="DISTRITO"))
leafletProxy("mapa") %>%
clearShapes() %>%
addPolygons(stroke = TRUE,
color='black',
weight = 1,
data=data_selecc,
popup = ~paste0("<strong>",NOMBDIST,"</strong></br>",
"Infectados totales:", TOTAL, "</br>",
"Mujeres:",FEMENINO,"</br>",
"Hombres:", MASCULINO,"</br>",
"Pico de infectados:",PICO_INF ,"</br>",
"Infectados ayer:", INFECTADOS_AYER,"</br>",
"Fallecidos totales:",TOTAL_F,"</br>"),
highlight = highlightOptions(bringToFront = TRUE,
color="red",
weight=3),
popupOptions = popupOptions(
style = list("font-weight"="normal",
padding = "3px 8px"),
textsize = "12px",
direction = "auto"))
}
})
observe({
provincias = data_distrital@data %>% filter(NOMBDEP %in% input$Departamento) %>%
`$`('NOMBPROV') %>% unique() %>% sort()
stillSelected<-isolate(input$Provincia[input$Provincia %in% provincias])
updateSelectizeInput(session,"Provincia",choices=provincias,
selected=stillSelected,server=T) })
observe({
distritos = data_distrital@data %>% filter(NOMBPROV %in% input$Provincia) %>%
`$`('NOMBDIST') %>% unique() %>% sort()
stillSelected<-isolate(input$Distrito[input$Distrito %in% distritos])
updateSelectizeInput(session,"Distrito",choices=distritos,
selected=stillSelected,server=T)
})
}
shinyApp(ui = ui, server = server)
library(purrr)
head(data_selecc)
head(data_selecc@data)
data_selecc@data$LABEL =
data_selecc@data %>%
map2(~htmltools::HTML(sprintf("<h2>%s</h2> %s",.NOMBPROV,.NOMBDEP))) )
data_selecc@data$LABEL =
data_selecc@data %>%
map2(~htmltools::HTML(sprintf("<h2>%s</h2> %s",.NOMBPROV,.NOMBDEP)))
data_selecc@data$LABEL =
data_selecc@data %>%
map(~htmltools::HTML(sprintf("<h2>%s</h2> %s",.NOMBPROV,.NOMBDEP)))
data_selecc@data$LABEL =
data_selecc@data %>%
map(~htmltools::HTML(sprintf("<h2>%s</h2> %s",.$NOMBPROV,.$NOMBDEP)))
data_selecc@data$LABEL =
data_selecc@data %>%
pmap(list(DEPARTAMENTO,
TOTAL,
FEMENINO,
MASCULINO,
PICO_INF,
INFECTADOS_AYER,
TOTAL_F),
paste0)
data_selecc@data$LABEL =
data_selecc@data %>%
pmap(list(DISTRITO,
TOTAL,
FEMENINO,
MASCULINO,
PICO_INF,
INFECTADOS_AYER,
TOTAL_F),
paste0)
data_selecc@data$LABEL =
data_selecc@data %>%
mutate(a=pmap(list(DISTRITO,
TOTAL,
FEMENINO,
MASCULINO,
PICO_INF,
INFECTADOS_AYER,
TOTAL_F),
paste0))
data_selecc@data$LABEL =
data_selecc@data %>%
mutate(a=pmap(list(NOMBDIST,
TOTAL,
FEMENINO,
MASCULINO,
PICO_INF,
INFECTADOS_AYER,
TOTAL_F),
paste0))
View(data_selecc)
data_selecc@data %>%
mutate(a=pmap(list(NOMBDIST,
TOTAL,
FEMENINO,
MASCULINO,
PICO_INF,
INFECTADOS_AYER,
TOTAL_F),
paste0))
data_selecc = data_distrital[data_distrital$NOMBDIST %in% dist_selecc,]
data_selecc@data %>%
mutate(a=pmap(list(NOMBDIST,
TOTAL,
FEMENINO,
MASCULINO,
PICO_INF,
INFECTADOS_AYER,
TOTAL_F),
paste0))
metricas = fx_metricas("Dist",dist_selecc)
data_selecc@data =  data_selecc@data %>%
left_join(metricas,by= c("NOMBDIST"="DISTRITO"))
data_selecc@data %>%
mutate(a=pmap(list(NOMBDIST,
TOTAL,
FEMENINO,
MASCULINO,
PICO_INF,
INFECTADOS_AYER,
TOTAL_F),
paste0))
data_selecc@data %>%
mutate(a=pmap(list(a=NOMBDIST,b=TOTAL,c=FEMENINO,d=MASCULINO,e=PICO_INF,f=INFECTADOS_AYER,g=TOTAL_F),
function(a,b,c,d,e,f,g){
htmltools::HTML(sprintf("<strong>%s</strong><br/>
Infectados totales: %d<br/>
Mujeres: %d<br/>
Hombres: %d<br/>
Pico de infectados: %s<br/>
Infectados ayer: %d <br/>
Fallecidos totales: %d <br/>",
a,b,c,d,e,f,g))}
))
data_selecc = data_distrital[data_distrital$NOMBDIST %in% dist_selecc,]
metricas = fx_metricas("Dist",dist_selecc)
data_selecc@data =  data_selecc@data %>%
left_join(metricas,by= c("NOMBDIST"="DISTRITO"))  %>%
mutate(LABEL=pmap(list(a=NOMBDIST,b=TOTAL,c=FEMENINO,d=MASCULINO,
e=PICO_INF,f=INFECTADOS_AYER,g=TOTAL_F),
function(a,b,c,d,e,f,g){
htmltools::HTML(sprintf("<strong>%s</strong><br/>
Infectados totales: %d<br/>
Mujeres: %d<br/>
Hombres: %d<br/>
Pico de infectados: %s<br/>
Infectados ayer: %d <br/>
Fallecidos totales: %d <br/>",
a,b,c,d,e,f,g))}
))
View(data_selecc)
data_selecc@data$LABEL
# Codigo de servidor
server <- function(input, output,session){
output$mapa <- renderLeaflet({
leaflet() %>%
addTiles(attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>') %>%
setView( lng = -75.648748 , lat= -9.802423 ,zoom=5)
})
observe({
req(input$Analisis)
analisis = input$Analisis
if(analisis=='Departamental'){
req(input$Departamento)
depart_selecc = input$Departamento
data_selecc = data_depart[data_depart$NOMBDEP %in% depart_selecc,]
metricas = fx_metricas("Dep",depart_selecc)
data_selecc@data =  data_selecc@data %>% left_join(metricas,by= c("NOMBDEP"="DEPARTAMENTO"))
labels = sprintf(
"<strong>%s</strong><br/>
Infectados totales: %d<br/>
Mujeres: %d<br/>
Hombres: %d<br/>
Pico de infectados: %s<br/>
Infectados ayer: %d <br/>
Fallecidos totales: %d <br/>",
metricas$DEPARTAMENTO,
metricas$TOTAL,
metricas$FEMENINO,
metricas$MASCULINO,
metricas$PICO,
metricas$INFECTADOS_AYER,
metricas$TOTAL_F) %>% lapply(htmltools::HTML)
leafletProxy("mapa") %>%
clearShapes() %>%
addPolygons(stroke = TRUE,
color='black',
weight = 1,
data=data_selecc,
label = labels,
highlight = highlightOptions(bringToFront = TRUE,
color="red",
weight=3),
labelOptions = labelOptions(
style = list("font-weight"="normal",
padding = "3px 8px"),
textsize = "12px",
direction = "auto"))
}
if(analisis=='Distrital'){
req(input$Distrito)
dist_selecc = input$Distrito
data_selecc = data_distrital[data_distrital$NOMBDIST %in% dist_selecc,]
metricas = fx_metricas("Dist",dist_selecc)
data_selecc@data =  data_selecc@data %>%
left_join(metricas,by= c("NOMBDIST"="DISTRITO"))  %>%
mutate(LABEL=pmap(list(a=NOMBDIST,b=TOTAL,c=FEMENINO,d=MASCULINO,
e=PICO_INF,f=INFECTADOS_AYER,g=TOTAL_F),
function(a,b,c,d,e,f,g){
htmltools::HTML(sprintf("<strong>%s</strong><br/>
Infectados totales: %d<br/>
Mujeres: %d<br/>
Hombres: %d<br/>
Pico de infectados: %s<br/>
Infectados ayer: %d <br/>
Fallecidos totales: %d <br/>",
a,b,c,d,e,f,g))}
))
leafletProxy("mapa") %>%
clearShapes() %>%
addPolygons(stroke = TRUE,
color='black',
weight = 1,
data=data_selecc,
popup = ~LABEL,
highlight = highlightOptions(bringToFront = TRUE,
color="red",
weight=3),
popupOptions = popupOptions(
style = list("font-weight"="normal",
padding = "3px 8px"),
textsize = "12px",
direction = "auto"))
}
})
observe({
provincias = data_distrital@data %>% filter(NOMBDEP %in% input$Departamento) %>%
`$`('NOMBPROV') %>% unique() %>% sort()
stillSelected<-isolate(input$Provincia[input$Provincia %in% provincias])
updateSelectizeInput(session,"Provincia",choices=provincias,
selected=stillSelected,server=T) })
observe({
distritos = data_distrital@data %>% filter(NOMBPROV %in% input$Provincia) %>%
`$`('NOMBDIST') %>% unique() %>% sort()
stillSelected<-isolate(input$Distrito[input$Distrito %in% distritos])
updateSelectizeInput(session,"Distrito",choices=distritos,
selected=stillSelected,server=T)
})
}
shinyApp(ui = ui, server = server)
# Codigo de servidor
server <- function(input, output,session){
output$mapa <- renderLeaflet({
leaflet() %>%
addTiles(attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>') %>%
setView( lng = -75.648748 , lat= -9.802423 ,zoom=5)
})
observe({
req(input$Analisis)
analisis = input$Analisis
if(analisis=='Departamental'){
req(input$Departamento)
depart_selecc = input$Departamento
data_selecc = data_depart[data_depart$NOMBDEP %in% depart_selecc,]
metricas = fx_metricas("Dep",depart_selecc)
data_selecc@data =  data_selecc@data %>% left_join(metricas,by= c("NOMBDEP"="DEPARTAMENTO"))
labels = sprintf(
"<strong>%s</strong><br/>
Infectados totales: %d<br/>
Mujeres: %d<br/>
Hombres: %d<br/>
Pico de infectados: %s<br/>
Infectados ayer: %d <br/>
Fallecidos totales: %d <br/>",
metricas$DEPARTAMENTO,
metricas$TOTAL,
metricas$FEMENINO,
metricas$MASCULINO,
metricas$PICO,
metricas$INFECTADOS_AYER,
metricas$TOTAL_F) %>% lapply(htmltools::HTML)
leafletProxy("mapa") %>%
clearShapes() %>%
addPolygons(stroke = TRUE,
color='black',
weight = 1,
data=data_selecc,
label = labels,
highlight = highlightOptions(bringToFront = TRUE,
color="red",
weight=3),
labelOptions = labelOptions(
style = list("font-weight"="normal",
padding = "3px 8px"),
textsize = "12px",
direction = "auto"))
}
if(analisis=='Distrital'){
req(input$Distrito)
dist_selecc = input$Distrito
data_selecc = data_distrital[data_distrital$NOMBDIST %in% dist_selecc,]
metricas = fx_metricas("Dist",dist_selecc)
data_selecc@data =  data_selecc@data %>%
left_join(metricas,by= c("NOMBDIST"="DISTRITO"))  %>%
mutate(LABEL=pmap(list(a=NOMBDIST,b=TOTAL,c=FEMENINO,d=MASCULINO,
e=PICO_INF,f=INFECTADOS_AYER,g=TOTAL_F),
function(a,b,c,d,e,f,g){
htmltools::HTML(sprintf("<strong>%s</strong><br/>
Infectados totales: %d<br/>
Mujeres: %d<br/>
Hombres: %d<br/>
Pico de infectados: %s<br/>
Infectados ayer: %d <br/>
Fallecidos totales: %d <br/>",
a,b,c,d,e,f,g))}
))
leafletProxy("mapa") %>%
clearShapes() %>%
addPolygons(stroke = TRUE,
color='black',
weight = 1,
data=data_selecc,
label = ~LABEL,
highlight = highlightOptions(bringToFront = TRUE,
color="red",
weight=3),
labelOptions = labelOptions(
style = list("font-weight"="normal",
padding = "3px 8px"),
textsize = "12px",
direction = "auto"))
}
})
observe({
provincias = data_distrital@data %>% filter(NOMBDEP %in% input$Departamento) %>%
`$`('NOMBPROV') %>% unique() %>% sort()
stillSelected<-isolate(input$Provincia[input$Provincia %in% provincias])
updateSelectizeInput(session,"Provincia",choices=provincias,
selected=stillSelected,server=T) })
observe({
distritos = data_distrital@data %>% filter(NOMBPROV %in% input$Provincia) %>%
`$`('NOMBDIST') %>% unique() %>% sort()
stillSelected<-isolate(input$Distrito[input$Distrito %in% distritos])
updateSelectizeInput(session,"Distrito",choices=distritos,
selected=stillSelected,server=T)
})
}
shinyApp(ui = ui, server = server)
# Codigo de servidor
server <- function(input, output,session){
output$mapa <- renderLeaflet({
leaflet() %>%
addTiles(attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>') %>%
setView( lng = -75.648748 , lat= -9.802423 ,zoom=5)
})
observe({
req(input$Analisis)
analisis = input$Analisis
if(analisis=='Departamental'){
req(input$Departamento)
depart_selecc = input$Departamento
data_selecc = data_depart[data_depart$NOMBDEP %in% depart_selecc,]
metricas = fx_metricas("Dep",depart_selecc)
data_selecc@data =  data_selecc@data %>% left_join(metricas,by= c("NOMBDEP"="DEPARTAMENTO"))
labels = sprintf(
"<strong>%s</strong><br/>
Infectados totales: %d<br/>
Mujeres: %d<br/>
Hombres: %d<br/>
Pico de infectados: %s<br/>
Infectados ayer: %d <br/>
Fallecidos totales: %d <br/>",
metricas$DEPARTAMENTO,
metricas$TOTAL,
metricas$FEMENINO,
metricas$MASCULINO,
metricas$PICO,
metricas$INFECTADOS_AYER,
metricas$TOTAL_F) %>% lapply(htmltools::HTML)
leafletProxy("mapa") %>%
clearShapes() %>%
addPolygons(stroke = TRUE,
color='black',
weight = 1,
data=data_selecc,
label = labels,
highlight = highlightOptions(bringToFront = TRUE,
color="red",
weight=3),
labelOptions = labelOptions(
style = list("font-weight"="normal",
padding = "3px 8px"),
textsize = "12px",
direction = "auto"))
}
if(analisis=='Distrital'){
req(input$Distrito)
dist_selecc = input$Distrito
data_selecc = data_distrital[data_distrital$NOMBDIST %in% dist_selecc,]
metricas = fx_metricas("Dist",dist_selecc)
data_selecc@data =  data_selecc@data %>%
left_join(metricas,by= c("NOMBDIST"="DISTRITO"))  %>%
mutate(LABEL=pmap(list(a=NOMBDIST,b=TOTAL,c=FEMENINO,d=MASCULINO,
e=PICO_INF,f=INFECTADOS_AYER,g=TOTAL_F),
function(a,b,c,d,e,f,g){
htmltools::HTML(sprintf("<strong>%s</strong><br/>
Infectados totales: %d<br/>
Mujeres: %d<br/>
Hombres: %d<br/>
Pico de infectados: %s<br/>
Infectados ayer: %d <br/>
Fallecidos totales: %d <br/>",
a,b,c,d,e,ifelse(is.na(f),0,f),g))}
))
leafletProxy("mapa") %>%
clearShapes() %>%
addPolygons(stroke = TRUE,
color='black',
weight = 1,
data=data_selecc,
label = ~LABEL,
highlight = highlightOptions(bringToFront = TRUE,
color="red",
weight=3),
labelOptions = labelOptions(
style = list("font-weight"="normal",
padding = "3px 8px"),
textsize = "12px",
direction = "auto"))
}
})
observe({
provincias = data_distrital@data %>% filter(NOMBDEP %in% input$Departamento) %>%
`$`('NOMBPROV') %>% unique() %>% sort()
stillSelected<-isolate(input$Provincia[input$Provincia %in% provincias])
updateSelectizeInput(session,"Provincia",choices=provincias,
selected=stillSelected,server=T) })
observe({
distritos = data_distrital@data %>% filter(NOMBPROV %in% input$Provincia) %>%
`$`('NOMBDIST') %>% unique() %>% sort()
stillSelected<-isolate(input$Distrito[input$Distrito %in% distritos])
updateSelectizeInput(session,"Distrito",choices=distritos,
selected=stillSelected,server=T)
})
}
shinyApp(ui = ui, server = server)
data_distrital
data_distrital@data

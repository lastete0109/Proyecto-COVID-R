addPolygons(stroke = TRUE,
color='black',
weight = 1,
data=data_selecc,
label = labels,
highlight = highlightOptions(bringToFront = TRUE,
color="red",
weight=3),
labelOptions = labelOptions(
style = list("font-weight"="normal",
padding = "3px 8px"),
textsize = "12px",
direction = "auto"))
}
})
}
shinyApp(ui = ui, server = server)
fx_metricas =  function(tipo,filtro){
if(tipo=="Dep"){
# Analizamos contagiados
aux = contagiados %>%
select(FECHA_RESULTADO,DEPARTAMENTO,SEXO,EDAD) %>%
mutate(FECHA_RESULTADO=as.Date(FECHA_RESULTADO,format='%d/%m/%Y'),
SEXO=ifelse(SEXO=='','POR DETERMINAR',SEXO),
DIA=weekdays(FECHA_RESULTADO)) %>%
filter(DEPARTAMENTO %in% filtro)
resumen = aux %>% group_by(DEPARTAMENTO,SEXO) %>%
summarise(Infectados=n()) %>% ungroup() %>%
cast(DEPARTAMENTO~SEXO,fill=0) %>% mutate(TOTAL=MASCULINO+FEMENINO+`POR DETERMINAR`)
resumen_dia = aux %>% group_by(DEPARTAMENTO,FECHA_RESULTADO) %>%
summarise(Infectados=n()) %>% top_n(1,Infectados) %>% select(-Infectados) %>%
dplyr::rename("PICO_INF"="FECHA_RESULTADO")
resumen_dia_semana =  aux %>% group_by(DEPARTAMENTO,DIA) %>%
summarise(Infectados=n()) %>% top_n(2,Infectados) %>%
mutate(DIAS_MAS_INFECTADOS=paste0(DIA,collapse=',')) %>% ungroup() %>%
distinct(DEPARTAMENTO,DIAS_MAS_INFECTADOS)
resumen_ayer =  aux %>% filter(FECHA_RESULTADO==Sys.Date()-days(1)) %>% group_by(DEPARTAMENTO) %>%
summarise(Infectados=n()) %>% ungroup() %>%
dplyr::rename("INFECTADOS_AYER"="Infectados")
dia_semana = ifelse(wday(Sys.Date())-1==0,7,wday(Sys.Date())-1)
semana_pasada = seq(Sys.Date()-dia_semana-6,Sys.Date()-dia_semana,by="days")
resumen_semana_pasada = aux %>% filter(FECHA_RESULTADO %in% semana_pasada) %>% group_by(DEPARTAMENTO) %>%
summarise(Infectados=n()) %>% ungroup() %>%
dplyr::rename("INFECTADOS_SEMANA_PASADA"="Infectados")
resumen_cons =  resumen %>%
left_join(resumen_dia) %>%
left_join(resumen_dia_semana) %>%
left_join(resumen_ayer) %>%
left_join(resumen_semana_pasada)
# Analizamos fallecidos
aux2 =  fallecidos %>%
select(FECHA_FALLECIMIENTO,DEPARTAMENTO,SEXO,EDAD_DECLARADA) %>%
mutate(FECHA_FALLECIMIENTO=as.Date(FECHA_FALLECIMIENTO,format='%d/%m/%Y'),
DIA=weekdays(FECHA_FALLECIMIENTO)) %>%
filter(DEPARTAMENTO %in% depart_selecc)
resumen_rip = aux2 %>% mutate(SEXO = paste0(SEXO,"_F")) %>% group_by(DEPARTAMENTO,SEXO) %>%
summarise(Fallecidos=n()) %>% ungroup() %>%
cast(DEPARTAMENTO~SEXO,fill=0) %>%
mutate(TOTAL_F= rowSums(.[grep("_F", names(.))], na.rm = TRUE))
dia_semana = ifelse(wday(Sys.Date())-1==0,7,wday(Sys.Date())-1)
semana_pasada = seq(Sys.Date()-dia_semana-6,Sys.Date()-dia_semana,by="days")
resumen_rip_semana_pasada = aux2 %>% filter(FECHA_FALLECIMIENTO %in% semana_pasada) %>% group_by(DEPARTAMENTO) %>%
summarise(Fallecidos=n()) %>% ungroup() %>%
dplyr::rename("FALLECIDOS_SEMANA_PASADA"="Fallecidos")
resumen_rip_cons = resumen_rip %>% left_join(resumen_rip_semana_pasada)
# Consolidamos info.
metricas = resumen_cons  %>% left_join(resumen_rip_cons)
return(metricas)
}
}
fx_metricas("Dep",c("LIMA"))
a = fx_metricas("Dep","LIMA")
a = fx_metricas("Dep",c("LIMA"))
contagiados %>%
select(FECHA_RESULTADO,DEPARTAMENTO,SEXO,EDAD) %>%
mutate(FECHA_RESULTADO=as.Date(FECHA_RESULTADO,format='%d/%m/%Y'),
SEXO=ifelse(SEXO=='','POR DETERMINAR',SEXO),
DIA=weekdays(FECHA_RESULTADO)) %>%
filter(DEPARTAMENTO %in% c("LIMA"))
fx_metricas =  function(tipo,filtro){
if(tipo=="Dep"){
# Analizamos contagiados
aux = contagiados %>%
select(FECHA_RESULTADO,DEPARTAMENTO,SEXO,EDAD) %>%
mutate(FECHA_RESULTADO=as.Date(FECHA_RESULTADO,format='%d/%m/%Y'),
SEXO=ifelse(SEXO=='','POR DETERMINAR',SEXO),
DIA=weekdays(FECHA_RESULTADO)) %>%
filter(DEPARTAMENTO %in% filtro)
resumen = aux %>% group_by(DEPARTAMENTO,SEXO) %>%
summarise(Infectados=n()) %>% ungroup() %>%
cast(DEPARTAMENTO~SEXO,fill=0) %>% mutate(TOTAL=MASCULINO+FEMENINO+`POR DETERMINAR`)
resumen_dia = aux %>% group_by(DEPARTAMENTO,FECHA_RESULTADO) %>%
summarise(Infectados=n()) %>% top_n(1,Infectados) %>% select(-Infectados) %>%
dplyr::rename("PICO_INF"="FECHA_RESULTADO")
resumen_dia_semana =  aux %>% group_by(DEPARTAMENTO,DIA) %>%
summarise(Infectados=n()) %>% top_n(2,Infectados) %>%
mutate(DIAS_MAS_INFECTADOS=paste0(DIA,collapse=',')) %>% ungroup() %>%
distinct(DEPARTAMENTO,DIAS_MAS_INFECTADOS)
resumen_ayer =  aux %>% filter(FECHA_RESULTADO==Sys.Date()-days(1)) %>% group_by(DEPARTAMENTO) %>%
summarise(Infectados=n()) %>% ungroup() %>%
dplyr::rename("INFECTADOS_AYER"="Infectados")
dia_semana = ifelse(wday(Sys.Date())-1==0,7,wday(Sys.Date())-1)
semana_pasada = seq(Sys.Date()-dia_semana-6,Sys.Date()-dia_semana,by="days")
resumen_semana_pasada = aux %>% filter(FECHA_RESULTADO %in% semana_pasada) %>% group_by(DEPARTAMENTO) %>%
summarise(Infectados=n()) %>% ungroup() %>%
dplyr::rename("INFECTADOS_SEMANA_PASADA"="Infectados")
resumen_cons =  resumen %>%
left_join(resumen_dia) %>%
left_join(resumen_dia_semana) %>%
left_join(resumen_ayer) %>%
left_join(resumen_semana_pasada)
# Analizamos fallecidos
aux2 =  fallecidos %>%
select(FECHA_FALLECIMIENTO,DEPARTAMENTO,SEXO,EDAD_DECLARADA) %>%
mutate(FECHA_FALLECIMIENTO=as.Date(FECHA_FALLECIMIENTO,format='%d/%m/%Y'),
DIA=weekdays(FECHA_FALLECIMIENTO)) %>%
filter(DEPARTAMENTO %in% filtro)
resumen_rip = aux2 %>% mutate(SEXO = paste0(SEXO,"_F")) %>% group_by(DEPARTAMENTO,SEXO) %>%
summarise(Fallecidos=n()) %>% ungroup() %>%
cast(DEPARTAMENTO~SEXO,fill=0) %>%
mutate(TOTAL_F= rowSums(.[grep("_F", names(.))], na.rm = TRUE))
dia_semana = ifelse(wday(Sys.Date())-1==0,7,wday(Sys.Date())-1)
semana_pasada = seq(Sys.Date()-dia_semana-6,Sys.Date()-dia_semana,by="days")
resumen_rip_semana_pasada = aux2 %>% filter(FECHA_FALLECIMIENTO %in% semana_pasada) %>% group_by(DEPARTAMENTO) %>%
summarise(Fallecidos=n()) %>% ungroup() %>%
dplyr::rename("FALLECIDOS_SEMANA_PASADA"="Fallecidos")
resumen_rip_cons = resumen_rip %>% left_join(resumen_rip_semana_pasada)
# Consolidamos info.
metricas = resumen_cons  %>% left_join(resumen_rip_cons)
return(metricas)
}
}
a = fx_metricas("Dep",c("LIMA"))
fx_metricas("Dep",c("LIMA"))
View(contagiados)
head(contagiados)
contagiados_clean = contagiados %>%
select(FECHA_RESULTADO,DEPARTAMENTO,PROVINCIA,DISTRITO,EDAD,SEXO)
View(contagiados_clean)
contagiados_clean = contagiados %>%
select(FECHA_RESULTADO,DEPARTAMENTO,PROVINCIA,DISTRITO,EDAD,SEXO) %>%
mutate(FECHA_RESULTADO=as.Date(FECHA_RESULTADO,format='%d/%m/%Y'),
SEXO=ifelse(SEXO=='','POR DETERMINAR',SEXO),
PROVINCIA=ifelse(grepl('EN INVESTIGACIÓN',PROVINCIA),NA,PROVINCIA),
DISTRITO=ifelse(grepl('EN INVESTIGACIÓN',DISTRITO),NA,DISTRITO))
View(contagiados_clean)
dia_semana = ifelse(wday(Sys.Date())-1==0,7,wday(Sys.Date())-1)
semana_pasada = seq(Sys.Date()-dia_semana-6,Sys.Date()-dia_semana,by="days")
contagiados_clean = contagiados %>%
select(FECHA_RESULTADO,DEPARTAMENTO,PROVINCIA,DISTRITO,EDAD,SEXO) %>%
mutate(FECHA_RESULTADO=as.Date(FECHA_RESULTADO,format='%d/%m/%Y'),
SEXO=ifelse(SEXO=='','POR DETERMINAR',SEXO),
PROVINCIA=ifelse(grepl('EN INVESTIGACIÓN',PROVINCIA),NA,PROVINCIA),
DISTRITO=ifelse(grepl('EN INVESTIGACIÓN',DISTRITO),NA,DISTRITO),
DIA=weekdays(FECHA_RESULTADO))
View(contagiados_clean)
View(data_provincial)
View(fallecidos)
head(fallecidos)
fallecidos_clean = fallecidos %>%
select(FECHA_FALLECIMIENTO,DEPARTAMENTO,PROVINCIA,DISTRITO,EDAD_DECLARADA,SEXO) %>%
mutate(FECHA_FALLECIMIENTO=as.Date(FECHA_FALLECIMIENTO,format='%d/%m/%Y'))
View(fallecidos_clean)
fallecidos$SEXO %>% unique
fallecidos$DEPARTAMENTO %>%unique()
fallecidos$PROVINCIA %>%unique()
fallecidos_clean = fallecidos %>%
select(FECHA_FALLECIMIENTO,DEPARTAMENTO,PROVINCIA,DISTRITO,EDAD_DECLARADA,SEXO) %>%
mutate(FECHA_FALLECIMIENTO=as.Date(FECHA_FALLECIMIENTO,format='%d/%m/%Y'),
PROVINCIA=ifelse(PROVINCIA=="",NA,PROVINCIA),
DISTRITO=ifelse(DISTRITO=="",NA,DISTRITO))
View(fallecidos_clean)
fallecidos$PROVINCIA %>%unique()
fallecidos$DISTRITO %>%unique()
fallecidos_clean = fallecidos %>%
select(FECHA_FALLECIMIENTO,DEPARTAMENTO,PROVINCIA,DISTRITO,EDAD_DECLARADA,SEXO) %>%
mutate(FECHA_FALLECIMIENTO=as.Date(FECHA_FALLECIMIENTO,format='%d/%m/%Y'),
PROVINCIA=ifelse(PROVINCIA=="",NA,PROVINCIA),
DISTRITO=ifelse(DISTRITO=="",NA,upper(DISTRITO)))
fallecidos_clean = fallecidos %>%
select(FECHA_FALLECIMIENTO,DEPARTAMENTO,PROVINCIA,DISTRITO,EDAD_DECLARADA,SEXO) %>%
mutate(FECHA_FALLECIMIENTO=as.Date(FECHA_FALLECIMIENTO,format='%d/%m/%Y'),
PROVINCIA=ifelse(PROVINCIA=="",NA,PROVINCIA),
DISTRITO=ifelse(DISTRITO=="",NA,toupper(DISTRITO)))
View(contagiados)
filtro="LIMA"
contagiados_filtro =  contagiados_clean %>%
select(FECHA_RESULTADO,PROVINCIA,SEXO,EDAD) %>%
filter(PROVINCIA %in% filtro)
View(contagiados_filtro)
data_provincial
data_provincial@bbox
data_provincial@polygons
data_provincial@data
data_provincial[data_provincial$NOMBPROV=="LIMA",]
bla = data_provincial[data_provincial$NOMBPROV=="LIMA",]
View(bla)
bla@polygons
bla@polygons[[1]]
bla2 = bla@polygons[[1]]
bla2@Polygons
bla2 = bla@polygons[[1]]@Polygons
bla2
bla2@coords
bla2
bla2$coords
bla2["coords"]
bla2[[[1]]]
bla2[[1]]
bla2 = bla@polygons[[1]]@Polygons[[1]]
bla2 = bla@polygons[[1]]@Polygons[[1]]@coords
Polygon()
bla2
bla
len(bla)
length(bla)
class(bla)
bla = data_provincial[data_provincial$NOMBPROV=="LIMA",]
lista=[]
for(i in 1:length(bla)){
lista = [lista,bla@polygons[[i]]@Polygons[[1]]@coords]
}
["Leo",2]
list("Leo",2)
bla = data_provincial[data_provincial$NOMBPROV=="LIMA",]
lista= list()
for(i in 1:length(bla)){
lista[i] = bla@polygons[[i]]@Polygons[[1]]@coords
}
View(lista)
lista[[1]]
for(i in 1:length(bla)){
print( bla@polygons[[i]]@Polygons[[1]]@coords)
}
for(i in 1:length(bla)){
class( bla@polygons[[i]]@Polygons[[1]]@coords)
}
for(i in 1:length(bla)){
print(class( bla@polygons[[i]]@Polygons[[1]]@coords))
}
for(i in 1:length(bla)){
bla@polygons[[i]]@Polygons[[1]]@coords %>% as.data.frame()
}
for(i in 1:length(bla)){
print(bla@polygons[[i]]@Polygons[[1]]@coords %>% as.data.frame() )
}
lista= list()
bla = data_provincial[data_provincial$NOMBPROV=="LIMA",]
lista= list()
for(i in 1:length(bla)){
lista[[i]]=bla@polygons[[i]]@Polygons[[1]]@coords %>% as.data.frame()
}
lista
do.call(rbind,lista)
aux = do.call(rbind,lista)
plot(aux$V1,aux$V2)
plot(aux$V2,aux$V1)
lines(aux$V2,aux$V1)
leafleat() %>%
addPolygons(data=bla)
library(leaflet)
leaflet() %>%
addPolygons(data=bla)
leaflet() %>%
addTiles()%>%
addPolygons(data=bla)
bla@data
bla@polygons
bla@plotOrder
bla@proj4string
leaflet() %>%
addTiles()%>%
addPolygons(data=bla,stroke=FALSE)
leaflet() %>%
addTiles()%>%
addPolygons(data=bla,stroke=FALSE,
highlight = highlightOptions(bringToFront = TRUE,
color="red",
weight=3))
leaflet() %>%
addTiles()%>%
addPolygons(data=bla,stroke=FALSE,
highlight = highlightOptions(bringToFront = TRUE,
opacity=10,
color="red",
weight=3))
bla = data_provincial[data_provincial$NOMBPROV %in% c("LIMA","CALLAO"),]
bla = data_provincial[data_provincial$NOMBPROV %in% c("LIMA","CALLAO"),]
leaflet() %>%
addTiles()%>%
addPolygons(data=bla,stroke=FALSE,
highlight = highlightOptions(bringToFront = TRUE,
opacity=10,
color="red",
weight=3))
leaflet() %>%
addTiles()%>%
addPolygons(data=bla,
highlight = highlightOptions(bringToFront = TRUE,
opacity=10,
color="red",
weight=3))
bla = data_provincial[data_provincial$NOMBPROV %in% "CALLAO",]
bla
bla = data_provincial[data_provincial$NOMBPROV %in% "CALLAO",]
lista= list()
for(i in 1:length(bla)){
lista[[i]]=bla@polygons[[i]]@Polygons[[1]]@coords %>% as.data.frame()
}
df_lista = do.call(rbind,lista)
View(df_lista)
df_lista = do.call(rbind,lista)
plot(df_lista$V1,df_lista$V2)
lines(df_lista$V1,df_lista$V2)
sr_lista=Polygon(df_lista)
View(lista)
View(sr_lista)
sr_lista=Polygon(df_lista,hole=TRUE)
View(sr_lista)
bla@polygons
sr_lista
df_final=SpatialPolygonsDataFrame(sr_lista)
df_final=SpatialPolygonsDataFrame(Sr=sr_lista)
sr_lista=Polygons(df_lista,hole=TRUE)
sr_polygon= Polygon(df_lista,hole=TRUE)
bla@polygons[[1]]
sr_lista=Polygons(sr_polygon,c(''))
sr_polygon= list(Polygon(df_lista,hole=TRUE))
sr_lista=Polygons(sr_polygon,c(''))
sr_lista=Polygons(sr_polygon,c('aaa'))
df_final=SpatialPolygonsDataFrame(Sr=sr_lista)
sr_lista
bla@polygons[[1]]
bla
sr_lista=Polygons(sr_polygon,c('822'))
df_final=SpatialPolygonsDataFrame(Sr=sr_lista,data=data.frame(OBJECTID='822',NOMBRE="Leo"))
data.frame(OBJECTID='822',NOMBRE="Leo")
sr_polygon= list(Polygon(df_lista))
sr_polygon= list(Polygon(df_lista))
sr_lista=Polygons(sr_polygon,c('822'))
sr_lista
sr_lista=Polygons(sr_polygon,c('822'))
sr_lista
df_final=SpatialPolygonsDataFrame(Sr=sr_lista,data=data.frame(OBJECTID='822',NOMBRE="Leo"))
df_final=SpatialPolygonsDataFrame(Sr=sr_lista,data=data.frame(OBJECTID='822',NOMBRE="Leo"),match.ID = TRUE)
bla@polygons[[1]]
bla@polygons[[1:10]]
bla@polygons[1:10]
sr_lista
bla@data
df_final=SpatialPolygonsDataFrame(Sr=sr_lista,data=data.frame(row.names='822',NOMBRE="Leo"),match.ID = TRUE)
data=data.frame(row.names='822',NOMBRE="Leo")
View(data)
df_final=SpatialPolygonsDataFrame(Sr=sr_lista,data=data.frame(row.names='822',NOMBRE="Leo"))
sr_lista
sr_lista@Polygons
sr_lista
d
df_final=SpatialPolygonsDataFrame(Sr=sr_lista,data=data.frame(row.names='822',NOMBRE="Leo"))
sr_lista@polygons=''
sr_spatial=SpatialPolygons(sr_lista)
sr_polygon= list(Polygon(df_lista))
sr_lista=Polygons(sr_polygon,c('822'))
sr_spatial=SpatialPolygons(sr_lista)
sr_spatial=SpatialPolygons(list(sr_lista))
proj4string(sr_spatial) = CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
df_final=SpatialPolygonsDataFrame(Sr=sr_lista,data=data.frame(row.names='822',NOMBRE="Leo"))
df_lista
df_lista = do.call(rbind,lista) %>% matrix
View(df_lista)
df_lista = do.call(rbind,lista)
df_lista = do.call(rbind,lista) %>% as.matrix()
df_lista
library(sp)
p = Polygon(df_lista)
ps = Polygons(list(p),1)
sps = SpatialPolygons(list(ps))
proj4string(sps) = CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
data = data.frame(f=99.9)
spdf = SpatialPolygonsDataFrame(sps,data)
spdf
leaflet() %>%
addTiles()%>%
addPolygons(data=spdf,stroke=FALSE,
highlight = highlightOptions(bringToFront = TRUE,
opacity=10,
color="red",
weight=3))
bla = data_provincial[data_provincial$NOMBPROV %in% "LIMA",]
lista= list()
for(i in 1:length(bla)){
lista[[i]]=bla@polygons[[i]]@Polygons[[1]]@coords %>% as.data.frame()
}
df_lista = do.call(rbind,lista) %>% as.matrix()
library(sp)
p = Polygon(df_lista)
ps = Polygons(list(p),1)
sps = SpatialPolygons(list(ps))
proj4string(sps) = CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
data = data.frame(f=99.9)
spdf = SpatialPolygonsDataFrame(sps,data)
spdf
library(leaflet)
leaflet() %>%
addTiles()%>%
addPolygons(data=spdf,stroke=FALSE,
highlight = highlightOptions(bringToFront = TRUE,
opacity=10,
color="red",
weight=3))
bla@proj4string
View(df_lista)
library(raster)
points(df_lista)
points(df_lista)
plot()
plot(1,1)
points(df_lista)
ploints(df_lista[,1],df_lista[,2])
plot(df_lista[,1],df_lista[,2])
points(df_lista)
lines(df_lista[,1],df_lista[,2])
lines(df_lista[,1],df_lista[,2])
plot(df_lista[,1],df_lista[,2])
bla = data_provincial[data_provincial$NOMBPROV %in% "CUSCO",]
lista= list()
for(i in 1:length(bla)){
lista[[i]]=bla@polygons[[i]]@Polygons[[1]]@coords %>% as.data.frame()
}
df_lista = do.call(rbind,lista) %>% as.matrix()
chull(df_lista)
X <- matrix(rnorm(2000), ncol = 2)
plot(X, cex = 0.5)
hpts <- chull(X)
hpts <- c(hpts, hpts[1])
lines(X[hpts, ])
a=chull(df_lista)
a=c(a,a[1])
plot(df_lista[,1],df_lista[,2])
a=chull(df_lista)
a=c(a,a[1])
lines[df_lista[a,]]
lines(df_lista[a,])
bla = data_provincial[data_provincial$NOMBPROV %in% "LIMA",]
lista= list()
for(i in 1:length(bla)){
lista[[i]]=bla@polygons[[i]]@Polygons[[1]]@coords %>% as.data.frame()
}
df_lista = do.call(rbind,lista) %>% as.matrix()
plot(df_lista[,1],df_lista[,2])
a=chull(df_lista)
a=c(a,a[1])
lines(df_lista[a,])
a
vertices = chull(df_lista)
df_final = df_lista[vertices]
df_final = df_lista[vertices,]
library(sp)
p = Polygon(df_lista)
ps = Polygons(list(p),1)
sps = SpatialPolygons(list(ps))
proj4string(sps) = CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
data = data.frame(f=99.9)
spdf = SpatialPolygonsDataFrame(sps,data)
leaflet() %>%
addTiles()%>%
addPolygons(data=spdf,stroke=FALSE,
highlight = highlightOptions(bringToFront = TRUE,
opacity=10,
color="red",
weight=3))
p = Polygon(df_final)
ps = Polygons(list(p),1)
sps = SpatialPolygons(list(ps))
proj4string(sps) = CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
data = data.frame(f=99.9)
spdf = SpatialPolygonsDataFrame(sps,data)
leaflet() %>%
addTiles()%>%
addPolygons(data=spdf,stroke=FALSE,
highlight = highlightOptions(bringToFront = TRUE,
opacity=10,
color="red",
weight=3))
chull
.Call(C_chull)
.Call(C_chull,x)
.CAll
.Call
.Call(head)
install.packages("alphahull")
library(alphahull)
install.packages("tripack")
alphahull
library(alphahull)
install.packages("tripack")
install.packages("alphahull")
library(alphahull)
install.packages("C:/Users/Leo/Downloads/tripack_1.3-9.1.tar.gz", repos = NULL, type = "source")
install.packages("spatstat")
remove.packages("alphahull", lib="~/R/win-library/3.5")
install.packages("alphahull")
setRepositories(graphics = getOption("menu.graphics"),
ind = NULL, addURLs = character())
install.packages("spatstat")
sessionInfo()
R.version
install.packages("installr")
library(installr)
updateR()
R.Version()
R.home()
